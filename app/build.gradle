apply plugin: 'com.android.application'
apply plugin: 'kotlin-android' // 코틀린 표준 라이브러리
apply plugin: 'kotlin-kapt' // 코플린 코드에서 어노테이션 프로세싱 사용을 위해 필요한 라이브러리 & Glide라이브러리도 사용하는 기능
apply plugin: 'kotlin-android-extensions' // 코틀린 익스텐션 사용을 위해 필요한 라이브러리

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.androidhuman.example.simplegithub"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // gradle.properties의 파일을 BuildConfig 내 필드로 변환해줍니다.
        /**
         * 사용자설정 필드 및 리소스 값을 앱 코드와 공유
         * Gradle은 빌드 시간에 BuildConfig 클래스를 생성하므로 앱 코드가 현재 빌드에 관한 정보를 검사할 수 있습니다. 또한 buildConfigField() 메서드를 사용하여 Gradle 빌드 구성 파일로부터 BuildConfig 클래스에 사용자설정 필드를 추가할 수 있으며 앱의 런타임 코드에 있는 해당 값에 액세스할 수 있습니다. 마찬가지로, resValue()로 앱 리소스 값을 추가할 수 있습니다.
         */
        buildConfigField "String", "GITHUB_CLIENT_ID",
            project.properties["GITHUB_CLIENT_ID"] ?: "\"NOT_FOUND\""
        buildConfigField "String", "GITHUB_CLIENT_SECRET",
            project.properties["GITHUB_CLIENT_SECRET"] ?: "\"NOT_FOUND\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    // [miss] 코틀린 코드를 (java코드와 분리하여) 저장할 폴더를 소스 디렉터리로 등록
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version" // 코틀린 표준 라이브러리를 의존성에 추가
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    implementation "com.android.support:customtabs:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"

    kapt "com.github.bumptech.glide:compiler:$glideVersion" // [miss][] 코틀린 어노테이션 프로세서에서 처리될 수 있도록 의존성에 추가

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
